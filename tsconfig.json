// A base configuration for src and tests, and also the config
// Visual Studio Code reads
{
  // Compiler options are mostly for the sub-configurations
  "compilerOptions": {
      // ES2019 support is pretty broad for Browsers, except for Function.prototype.toString, which is just not
      // likely to be a problem
      // ES2020 is very well supported in modern browsers.
      // ES 2021 has a couple of features not supported in Opera, but they're WeakRef and Promise.any.
      // It is safe to assume those features won't be run on a browser.
      // "lib": ["dom", "es2021"],
      "lib": ["dom", "es2019"],
      "incremental": true,
      "module": "commonjs",
      "strict": true,
      "noImplicitAny": true,
      "noImplicitOverride": true,
      "noImplicitReturns": true,
      "noUnusedLocals": true,
      "noUnusedParameters": true,
      "removeComments": true,
      "preserveConstEnums": true,
      "skipLibCheck": true,
      "target": "es6",
      "types": ["node"],
      "moduleResolution": "node",
      "resolveJsonModule": true,
      "allowUnreachableCode": false,
      "baseUrl": ".",
      "paths": {
          "@/*": ["./src/*"]
      },
      "plugins": [
          { "transform": "transformer-module" },
      ]

  },
  // This gives the VS Code IDE its magic.
  "include": [
      "**/*.ts",
  ],
}

// {
//   "compilerOptions": {
//     "experimentalDecorators": true,                   /* Enable experimental support for TC39 stage 2 draft decorators. */
//     "emitDecoratorMetadata": true,                    /* Emit design-type metadata for decorated declarations in source files. */
//     "useDefineForClassFields": true,                  /* Emit ECMAScript-standard-compliant class fields. */
//     "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */

//       "lib": ["es2019"],
//       "incremental": true,
//       "module": "commonjs",
//       "strict": true,
//       "noImplicitAny": true,
//       "noImplicitOverride": true,
//       "noImplicitReturns": true,
//       "noUnusedLocals": true,
//       "noUnusedParameters": true,
//       "removeComments": true,
//       "preserveConstEnums": true,
//       "skipLibCheck": true,
//       "target": "es6",
//       "types": ["node"],
//       "moduleResolution": "node",
//       "resolveJsonModule": true,
//       "allowUnreachableCode": false,
//       "baseUrl": ".",

//     "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
//     "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */

//     "strictNullChecks": true,                         /* When type checking, take into account 'null' and 'undefined'. */
//     "strictFunctionTypes": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
//     "strictBindCallApply": true,                      /* Check that the arguments for 'bind', 'call', and 'apply' methods match the original function. */
//     "strictPropertyInitialization": true,             /* Check for class properties that are declared but not set in the constructor. */
//     "noImplicitThis": true,                           /* Enable error reporting when 'this' is given the type 'any'. */
//     "alwaysStrict": true,                             /* Ensure 'use strict' is always emitted. */
//     "exactOptionalPropertyTypes": true,               /* Interpret optional property types as written, rather than adding 'undefined'. */
//     "noFallthroughCasesInSwitch": true,               /* Enable error reporting for fallthrough cases in switch statements. */
//     "noUncheckedIndexedAccess": true,                 /* Add 'undefined' to a type when accessed using an index. */
//     "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
//     "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
//   },
//   "include": [
//     "**/*.ts"
//   ]
// }
